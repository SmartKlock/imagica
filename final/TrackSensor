#!/bin/sh

### BEGIN INIT INFO
# Provides:             TrackSensor
# Required-Start:       $all
# Required-Stop:        
# Should-Start:         
# Should-Stop:
# Default-Start:        S
# Default-Stop:         0 6
# Short-Description:    Starts a tracksensor broadcast server
# Description:          
#                       Authenticator
### END INIT INFO

SERVICE_NAME=server
SERVICE_PATH=/usr/src/TrackSensor/
SERVICE_LOG=logt.txt
EXTRA_SERVICE=startup.sh
PID_PATH_NAME=$SERVICE_PATH$SERVICE_NAME-pid
PORT_ADDRESS=1234
case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            nohup $SERVICE_PATH$SERVICE_NAME $PORT_ADDRESS 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
#	    nohup $SERVICE_PATH$EXTRA_SERVICE 2>$SERVICE_PATH$SERVICE_LOG >$SERVICE_PATH$SERVICE_LOG
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is already running ..."
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stoping ..."
            kill $PID;
            echo "$SERVICE_NAME stopped ..."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ...";
            kill $PID;
            echo "$SERVICE_NAME stopped ...";
            rm $PID_PATH_NAME
            echo "$SERVICE_NAME starting ..."
            nohup $SERVICE_PATH$SERVICE_NAME $PORT_ADDRESS 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
esac 
